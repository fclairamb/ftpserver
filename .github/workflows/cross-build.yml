name: Cross Build

on:
  # We always generate cross-builds but only use them when we generate a release
  push:
  pull_request:
  release:
    types:
      - published

jobs:
  cross-build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        # This feels clunky to copy/paste the same value twice. I couldn't find a way to register it *once*.
        go: [ 1.16 ]
        target:
          # Linux
          - {os: linux, arch: amd64}
          - {os: linux, arch: arm64}
          - {os: linux, arch: 386}
          - {os: linux, arch: arm}
          # MacOs
          - {os: darwin, arch: amd64}
          - {os: darwin, arch: arm64}
          # Windows
          - {os: windows, arch: amd64, ext: .exe}
          - {os: windows, arch: 386, ext: .exe}
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      
      # Install Go
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      # Build a binary for each architecture
      - name: Build
        env:
          GOOS: ${{ matrix.target.os }}
          GOARCH: ${{ matrix.target.arch }}
        run: go build -o ftpserver-${{ matrix.target.os }}-${{ matrix.target.arch }}${{ matrix.target.ext }}
      
      # Upload each binary in the release assets (if there's one)
      - name: Upload binaries to release
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          # This is copy/paste of the previous step, I couldn't find a way to make it shared
          file: ftpserver-${{ matrix.target.os }}-${{ matrix.target.arch }}${{ matrix.target.ext }}
          asset_name: ftpserver-${{ matrix.target.os }}-${{ matrix.target.arch }}${{ matrix.target.ext }}
          tag: ${{ github.ref }}
          overwrite: true

  cross-build-status:
    needs: cross-build
    runs-on: ubuntu-20.04
    steps:
      - run: echo 'All good'
